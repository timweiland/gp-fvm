################################################################################
# PEP 621 Project Metadata                                                     #
################################################################################

# see https://peps.python.org/pep-0621/

[project]
name = "gp-fvm"
description = "Gaussian Process posteriors from Finite Volume Method observations"
readme = "README.md"
requires-python = ">=3.10,<3.12"
license = { text = "MIT" }
keywords = [
    "partial-differential-equations",
    "gaussian-processes",
    "finite-volume-method",
    "probabilistic-numerics",
    "galerkin-method",
]
authors = [
    { name = "Tim Weiland", email = "tim.weiland@uni-tuebingen.de" }
]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "numpy>=1.21.3",
    "scipy>=1.4",
    "jax[cpu]>=0.2.18",
    "pykeops>=2.1.1,<3.0",
]
dynamic = [
    "version",
]

[project.optional-dependencies]
plotting = [
    "matplotlib>=3.4.3",
]

[project.urls]
github = "https://github.com/timweiland/linpde-shallow-water"

################################################################################
# PEP 518 Build System Configuration                                           #
################################################################################

# see https://peps.python.org/pep-0518/

[build-system]
requires = [
    "setuptools>=61",
    "wheel",
    "setuptools_scm[toml]>=6.0",
]
build-backend = "setuptools.build_meta"

# see https://setuptools.pypa.io/en/stable/userguide/pyproject_config.html#setuptools-specific-configuration

[tool.setuptools]
platforms = ["any"]
zip-safe = false
packages = ["gp_fvm"]
package-dir = { "" = "src" }
include-package-data = true

################################################################################
# Testing Configuration                                                        #
################################################################################

# see https://docs.pytest.org/en/stable/reference/customize.html
# see https://docs.pytest.org/en/stable/reference/reference.html#ini-options-ref

[tool.pytest.ini_options]
addopts = [
    "--verbose",
    "--doctest-modules",
]
norecursedirs = [
    ".*",
    "*.egg*",
    "dist",
    "build",
    ".tox",
    "probnum",
    "linpde-gp",
]
testpaths=[
    "src",
    "tests",
]
doctest_optionflags = "NUMBER NORMALIZE_WHITESPACE"
filterwarnings = [
    # "import jax" implies "import flatbuffers", which raises the following warning.
    # Ignore similar to https://github.com/google/jax/blob/main/pytest.ini
    "ignore:the imp module is deprecated in favour of importlib.*:DeprecationWarning:flatbuffers.*"
]

################################################################################
# Linting Configuration                                                        #
################################################################################

[tool.pylint.master]
extension-pkg-whitelist = [
    "numpy",
]
load-plugins = [
    "pylint.extensions.check_elif",
    "pylint.extensions.docparams",
    "pylint.extensions.docstyle",
    "pylint.extensions.overlapping_exceptions",
    "pylint.extensions.mccabe",
]

[tool.pylint.messages_control]
disable = [
    # We allow TODO comments in the following format: `# TODO (#[ISSUE NUMBER]): This needs to be done.`
    "fixme",
    # We want to use "mathematical notation" to name some of our variables, e.g. `A` for matrices
    "invalid-name",
    # Temporary ignore, see https://github.com/probabilistic-numerics/probnum/discussions/470#discussioncomment-1998097 for an explanation
    "missing-return-doc",
    "missing-yield-doc",
    # This is research code...
    "missing-class-docstring",
    "missing-module-docstring",
    "missing-function-docstring",
]

[tool.pylint.format]
max-line-length = "88"

[tool.pylint.imports]
known-third-party = [
    "probnum",
    "linpde-gp",
]

[tool.pylint.design]
max-args = 10
max-complexity = 14
max-locals = 20
max-attributes = 15
min-public-methods = 0

[tool.pylint.similarities]
ignore-imports = "yes"

################################################################################
# Formatting Configuration                                                     #
################################################################################

# see https://black.readthedocs.io/en/stable/usage_and_configuration/index.html

[tool.black]
include = '\.pyi?$'
# If `exclude` is not set, `black` excludes all files listed in `.gitignore`.
# The following option extends this list of ignored files.
# see https://black.readthedocs.io/en/stable/usage_and_configuration/file_collection_and_discovery.html#gitignore
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories in the root
# of the project.
/(
    \.git
    | \.hg
)/
'''

# see https://pycqa.github.io/isort/docs/configuration/config_files.html
# see https://pycqa.github.io/isort/docs/configuration/options.html

[tool.isort]
# see https://pycqa.github.io/isort/docs/configuration/profiles.html#black
profile = "black"
combine_as_imports = true
force_sort_within_sections = true
known_third_party = ["probnum", "linpde-gp"]
known_testing = ["pytest", "pytest_cases"]
sections = [
    "FUTURE",
    "STDLIB",
    "THIRDPARTY",
    "TESTING",
    "FIRSTPARTY",
    "LOCALFOLDER",
]
